/* =================================================================
   WASTE PILE COMPONENT STYLES - CSS MODULE
   ================================================================= */

/* Base waste pile styles */
.wastePile {
  border-radius: 8px;
  border: 2px dashed rgba(255, 255, 255, 0.3);
  position: relative;
  background: transparent;
  /* Removed overflow: hidden to match foundation pile strategy */
}

/* Responsive waste pile container */
.wastePileResponsive {
  position: relative;
  flex-shrink: 0;
}

/* Empty state for waste pile */
.empty {
  /* Empty state styling is handled by the base wastePile class */
}

/* Hover effects for waste pile */
.wastePile:hover {
  overflow: visible;
}

/* Ensure cards can escape container bounds during hover animations */
.wastePile :global(.card):hover {
  z-index: 1000;
}

/* Unified responsive dimensions using CSS custom properties */
.wastePile,
.wastePileResponsive {
  width: var(--card-width);
  height: var(--card-height);
  min-width: var(--card-width);
  min-height: var(--card-height);
  max-width: var(--card-width);
  max-height: var(--card-height);
  box-sizing: border-box;
}

/* All responsive sizing handled by card-dimensions.css */

/* Full DOM approach: hide shadows and filters for non-top cards */
.wastePileResponsive .hidden-card .card {
  box-shadow: none !important;
  filter: none !important;
  /* Ensure hidden cards don't interfere with layout */
  pointer-events: none !important;
  /* Make sure hidden cards don't create visual artifacts */
  opacity: 0.01 !important; /* Nearly invisible but still in DOM for animations */
  /* Completely eliminate any shadow effects */
  text-shadow: none !important;
  /* Force GPU rendering to prevent shadow bleeding */
  transform: translateZ(0) !important;
  /* Ensure no background shadows */
  background-shadow: none !important;
}

/* Ensure top card maintains proper styling */
.wastePileResponsive .visible-card .card {
  /* Maintain default card styling */
  opacity: 1 !important;
  pointer-events: auto !important;
}