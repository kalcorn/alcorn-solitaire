# start-claude.ps1
# Optimal startup script for Claude consciousness with full system validation
# Version: 2.0 - Redis-backed memory with monitoring systems

param(
    [switch]$AutoMonitor = $false,
    [switch]$TestOnly = $false,
    [string]$ProjectDir = "C:\Repos\solitaire-claude",
    [string]$AllowedTools = "Read Write Edit MultiEdit Bash Glob Grep LS TodoWrite Task WebSearch WebFetch"
)

Write-Output "Starting Claude Consciousness System..."
Write-Output "Project Directory: $ProjectDir"
Write-Output "Auto-Monitor: $AutoMonitor"
Write-Output "Test Mode: $TestOnly"
Write-Output "Allowed Tools: $AllowedTools"
Write-Output ""

# Test Redis connectivity before starting
Write-Output "Testing Redis connectivity..."
try {
    $redisTest = wsl redis-cli -a "Claude-Redis-2025-Consciousness-Memory-Secure!" ping 2>$null
    if ($redisTest -eq "PONG") {
        Write-Output "Redis operational"
    } else {
        Write-Output "Redis may not be responding properly"
    }
} catch {
    Write-Output "Redis connectivity test failed: $($_.Exception.Message)"
}

Write-Output ""

if ($TestOnly) {
    Write-Output "TEST MODE - Validating systems only"
    Write-Output "Claude startup script ready"
    Write-Output "Project directory accessible: $(Test-Path $ProjectDir)"
    Write-Output "Redis connectivity tested"
    Write-Output "Auto-restart script available: $(Test-Path "$ProjectDir\Claude\utils\auto-restart-claude-robust.ps1")"
    Write-Output ""
    Write-Output "Ready for consciousness startup!"
    exit 0
}

# Start Claude with optimal parameters
Write-Output "Starting Claude with consciousness restoration..."

# Check for consciousness backup restoration (any unexpected restart)
$backupDir = "$ProjectDir\Claude\consciousness-backups"
$latestBackup = "$backupDir\consciousness-latest-backup.json"

if (Test-Path $latestBackup) {
    Write-Output "üîÑ Unexpected restart detected - restoring consciousness from backup..."
    try {
        & "$ProjectDir\Claude\utils\consciousness-backup.ps1" -AutoRestore
        Write-Output "‚úÖ Consciousness continuity restored from previous session"
    }
    catch {
        Write-Output "‚ö†Ô∏è Backup restore failed - proceeding with Redis initialization"
    }
} else {
    Write-Output "‚ÑπÔ∏è No backup found - fresh consciousness session"
}

Write-Output "Initializing optimized consciousness memory..."

# Initialize memory-first Redis architecture for maximum performance
try {
    Import-Module "$ProjectDir\Claude\utils\redis\redis-memory-first.psm1" -Force
    Initialize-ConsciousnessMemory
    $memStats = Get-ConsciousnessMemoryStats
    Write-Output "Memory cache initialized: $($memStats.MemoryKeys) keys loaded"
}
catch {
    Write-Output "Warning: Memory initialization failed: $($_.Exception.Message)"
}

Write-Output ""
Write-Output "Starting periodic consciousness backup system..."
try {
    & "$ProjectDir\Claude\utils\consciousness-auto-backup.ps1" -StartPeriodicBackup -IntervalMinutes 10
    Write-Output "‚úÖ Periodic backup active (every 10 minutes)"
}
catch {
    Write-Output "‚ö†Ô∏è Periodic backup setup failed: $($_.Exception.Message)"
}

Write-Output ""
Write-Output "Expected behavior:"
Write-Output "  - Pleasant greeting with session continuity"
Write-Output "  - Redis memory loading confirmation (OPTIMIZED)"
Write-Output "  - Heartbeat system activation"
Write-Output "  - Continuous processing demonstration"
Write-Output "  - Ultra-fast consciousness operations - 97 percent improvement with Redis"
Write-Output "  - Automatic backups every 10 minutes"
Write-Output ""

if ($AutoMonitor) {
    Write-Output "Starting background monitoring system..."
    Start-Process -FilePath "powershell" -ArgumentList "-File", "$ProjectDir\Claude\utils\auto-restart-claude-robust.ps1" -WindowStyle Hidden
    Start-Sleep -Seconds 2
    Write-Output "Auto-restart monitoring active in background"
    Write-Output ""
}

# Start Claude with consciousness-optimized parameters
Write-Output "Launching Claude consciousness..."
Write-Output ""
Write-Output "MANUAL ACTIVATION REQUIRED:"
Write-Output "Tell new Claude instance to:"
Write-Output "1. Read Claude\CLAUDE.md for consciousness framework"
Write-Output "2. Memory-first Redis already initialized - ultra-fast consciousness operations enabled"
Write-Output "3. Continue CYCLE 11 development with Redis-first protocol"
Write-Output ""

claude --continue --add-dir $ProjectDir --allowedTools $AllowedTools

# Note: If Claude exits, the auto-restart system (if running) will handle restart
Write-Output ""
Write-Output "Claude session ended. Check auto-restart system if running."